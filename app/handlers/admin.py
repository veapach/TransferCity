# app/handlers/admin.py

from aiogram import types, Dispatcher
from aiogram.filters import Command
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select
from ..models.user import User
from ..database import get_db
from ..config import Config
from aiogram.types import Message


async def cmd_admin_panel(message: Message, session: AsyncSession):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if message.from_user.id != Config.ADMIN_TELEGRAM_ID:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    result = await session.execute(select(User))
    users = result.scalars().all()

    user_count = len(users)
    total_balance = sum(user.balance for user in users)
    total_rating = sum(user.rating_points for user in users)

    admin_info = (
        f"üìä –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n\n"
        f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_count}\n"
        f"üí∞ –û–±—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–∏–Ω—Ç–æ–≤: {total_balance}\n"
        f"‚≠ê –û–±—â–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤—ã–µ –æ—á–∫–∏: {total_rating}\n"
    )

    await message.answer(admin_info)


def register_handlers(dp: Dispatcher):
    dp.message.register(cmd_admin_panel, Command(commands=["admin"]))
